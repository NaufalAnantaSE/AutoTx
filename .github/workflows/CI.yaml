name: CI

on:
  issue_comment:
    types: [created, edited]

jobs:
  run:
    if: |
      github.event.issue.pull_request &&
      contains(github.event.comment.body, '/workflows/ci')
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v3

    - name: Is owner?
      run: |
        exists=$(echo $(grep -Fxcs ${CREATOR} .github/CODEOWNERS))
        if [ "$exists" == "1" ] ; then
          echo IS_OWNER=true >> $GITHUB_ENV
        else
          echo IS_OWNER=false >> $GITHUB_ENV
        fi
      env:
        CREATOR: ${{github.event.comment.user.login}}

    - name: Is not owner...
      if: env.IS_OWNER == 'false'
      uses: actions/github-script@0.8.0
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: |
          github.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '${{github.event.comment.user.login}} is not an OWNER. Please see the .github/OWNERS file...'
          })

    - name: Fail if conditions aren't met...
      if: |
        env.IS_OWNER != 'true'
      run: exit 1

    - name: PR comment
      id: ci_comment
      uses: actions/github-script@v6
      with:
        script: |
          const comment = await github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '[Running CI](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})'
          });
          return comment.data.id;
    
    - name: Save comment ID
      run: echo "CI_COMMENT_ID=${{ steps.ci_comment.outputs.result }}" >> $GITHUB_ENV
      
    - name: Set up Python 3.10
      uses: actions/setup-python@v2
      with:
        python-version: "3.10"

    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -

    - name: Poetry Install
      run: |
        poetry install
    
    - name: Load tokens
      run: |
        poetry run load_tokens

    - name: Run CI
      run: |
        python benchmarks.py ./autotx/tests/token 5 benchmark-results
      env:
        OPENAI_API_KEY: ${{ secrets.CI_OPENAI_API_KEY }}
        CHAIN_RPC_URL: ${{ secrets.CI_CHAIN_RPC_URL }}

    - name: Comment on PR with benchmark results
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          const path = './benchmarks/benchmark-results/summary.md';
          const contents = fs.readFileSync(path, 'utf8');
          
          github.rest.issues.updateComment({
            comment_id: ${{ env.CI_COMMENT_ID }},
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: '[Finished CI](https://github.com/${{github.repository}}/actions/runs/${{github.run_id}})\n\n' + contents
          })
      
    - name: Upload artifact
      uses: actions/upload-artifact@v2
      with:
        name: benchmarks-debug
        path: ./benchmarks/benchmark-results
